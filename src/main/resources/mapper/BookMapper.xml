<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.BookDao">
  <resultMap id="BaseResultMap" type="com.example.demo.Entity.Book">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="is_end" jdbcType="CHAR" property="isEnd" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="new_title" jdbcType="VARCHAR" property="newTitle" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="come_from" jdbcType="VARCHAR" property="comeFrom" />
    <result column="intro" jdbcType="LONGVARCHAR" property="intro" />
  </resultMap>
  <sql id="Base_Column_List">
    id, book_name, author, pic, is_end, last_update_time, new_title,
    category_id, come_from, intro
  </sql>
  <select id="selectById" parameterType="java.lang.Long" resultType="com.example.demo.Entity.Book">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="findList" parameterType="com.example.demo.Entity.Book" resultType="com.example.demo.Entity.Book">
    SELECT * from book
    <where>
      <if test="id != null and id != ''">
        and id = #{id}
      </if>
      <if test="author != null and author != ''">
        and author like concat('%', #{author}, '%')
      </if>
      <if test="bookName != null and bookName != ''">
        (
          and bookName like concat('%', #{bookName}, '%')
          or author like concat('%', #{author}, '%')
        )
      </if>
      <if test="isEnd != null and isEnd != ''">
        and isEnd = #{isEnd}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.Entity.Book">
    insert into book (id, book_name, author, 
      pic, is_end, last_update_time, 
      new_title, category_id, come_from, 
      intro)
    values (#{id,jdbcType=BIGINT}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{isEnd,jdbcType=CHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{newTitle,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, #{comeFrom,jdbcType=VARCHAR}, 
      #{intro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Entity.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="isEnd != null">
        is_end,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="newTitle != null">
        new_title,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="comeFrom != null">
        come_from,
      </if>
      <if test="intro != null">
        intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="isEnd != null">
        #{isEnd,jdbcType=CHAR},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newTitle != null">
        #{newTitle,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="comeFrom != null">
        #{comeFrom,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.Entity.Book">
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="isEnd != null">
        is_end = #{isEnd,jdbcType=CHAR},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newTitle != null">
        new_title = #{newTitle,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="comeFrom != null">
        come_from = #{comeFrom,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.Entity.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      is_end = #{isEnd,jdbcType=CHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      new_title = #{newTitle,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      come_from = #{comeFrom,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.Entity.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      is_end = #{isEnd,jdbcType=CHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      new_title = #{newTitle,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      come_from = #{comeFrom,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>